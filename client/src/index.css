@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 45 3% 96%;

  --foreground: 20 5% 15%;

  --border: 45 4% 86%;

  --card: 45 6% 94%;

  --card-foreground: 20 5% 15%;

  --card-border: 45 6% 88%;

  --sidebar: 45 4% 91%;

  --sidebar-foreground: 20 5% 15%;

  --sidebar-border: 45 4% 85%;

  --sidebar-primary: 145 35% 25%;

  --sidebar-primary-foreground: 45 30% 95%;

  --sidebar-accent: 95 15% 83%;

  --sidebar-accent-foreground: 25 25% 25%;

  --sidebar-ring: 145 35% 25%;

  --popover: 45 8% 90%;

  --popover-foreground: 20 5% 15%;

  --popover-border: 45 8% 84%;

  --primary: 145 35% 25%;

  --primary-foreground: 45 30% 95%;

  --secondary: 45 8% 86%;

  --secondary-foreground: 25 25% 25%;

  --muted: 95 8% 85%;

  --muted-foreground: 25 15% 45%;

  --accent: 95 15% 88%;

  --accent-foreground: 25 25% 25%;

  --destructive: 0 65% 45%;

  --destructive-foreground: 0 10% 98%;

  --input: 45 8% 76%;
  --ring: 145 35% 25%;
  --chart-1: 145 45% 30%;
  --chart-2: 95 25% 55%;
  --chart-3: 25 35% 40%;
  --chart-4: 15 45% 55%;
  --chart-5: 20 25% 20%;

  --font-sans: Inter, sans-serif;
  --font-serif: "Playfair Display", serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(20 8% 20% / 0.03);
  --shadow-xs: 0px 2px 0px 0px hsl(20 8% 20% / 0.05);
  --shadow-sm: 0px 2px 0px 0px hsl(20 8% 20% / 0.04), 0px 1px 2px -1px hsl(20 8% 20% / 0.06);
  --shadow: 0px 2px 0px 0px hsl(20 8% 20% / 0.05), 0px 1px 2px -1px hsl(20 8% 20% / 0.08);
  --shadow-md: 0px 2px 0px 0px hsl(20 8% 20% / 0.06), 0px 2px 4px -1px hsl(20 8% 20% / 0.10);
  --shadow-lg: 0px 2px 0px 0px hsl(20 8% 20% / 0.08), 0px 4px 6px -1px hsl(20 8% 20% / 0.12);
  --shadow-xl: 0px 2px 0px 0px hsl(20 8% 20% / 0.10), 0px 8px 10px -1px hsl(20 8% 20% / 0.16);
  --shadow-2xl: 0px 2px 0px 0px hsl(20 8% 20% / 0.15);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 20 4% 9%;

  --foreground: 45 8% 88%;

  --border: 20 4% 18%;

  --card: 20 4% 12%;

  --card-foreground: 45 8% 88%;

  --card-border: 20 4% 20%;

  --sidebar: 20 4% 14%;

  --sidebar-foreground: 45 8% 88%;

  --sidebar-border: 20 4% 22%;

  --sidebar-primary: 145 35% 25%;

  --sidebar-primary-foreground: 45 30% 95%;

  --sidebar-accent: 95 12% 22%;

  --sidebar-accent-foreground: 95 15% 75%;

  --sidebar-ring: 145 35% 35%;

  --popover: 20 4% 16%;

  --popover-foreground: 45 8% 88%;

  --popover-border: 20 4% 24%;

  --primary: 145 35% 25%;

  --primary-foreground: 45 30% 95%;

  --secondary: 20 6% 20%;

  --secondary-foreground: 45 8% 80%;

  --muted: 20 6% 18%;

  --muted-foreground: 45 6% 65%;

  --accent: 95 8% 20%;

  --accent-foreground: 95 15% 75%;

  --destructive: 0 65% 35%;

  --destructive-foreground: 0 10% 98%;

  --input: 20 6% 28%;
  --ring: 145 35% 35%;
  --chart-1: 145 40% 65%;
  --chart-2: 95 30% 70%;
  --chart-3: 25 30% 65%;
  --chart-4: 15 40% 70%;
  --chart-5: 45 25% 75%;

  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.20);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.25);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.30), 0px 1px 2px -1px hsl(0 0% 0% / 0.35);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.35), 0px 1px 2px -1px hsl(0 0% 0% / 0.40);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.40), 0px 2px 4px -1px hsl(0 0% 0% / 0.45);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.45), 0px 4px 6px -1px hsl(0 0% 0% / 0.50);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.50), 0px 8px 10px -1px hsl(0 0% 0% / 0.55);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.60);

}

@layer base {
  * {
    @apply border-border;
  }

  html {
    scroll-behavior: smooth;
    scroll-padding-top: 80px; /* Account for fixed header */
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    overflow-x: hidden; /* Prevent horizontal scroll */
  }

  /* Custom scrollbar styling */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--muted));
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--muted-foreground));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--foreground));
  }

  /* Firefox scrollbar styling */
  html {
    scrollbar-width: thin;
    scrollbar-color: hsl(var(--muted-foreground)) hsl(var(--muted));
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Line clamp utility */
  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  /* Smooth scroll utilities */
  .smooth-scroll {
    scroll-behavior: smooth;
  }

  /* Scroll snap utilities */
  .scroll-snap-y {
    scroll-snap-type: y mandatory;
  }

  .scroll-snap-start {
    scroll-snap-align: start;
  }

  .scroll-snap-center {
    scroll-snap-align: center;
  }

  .scroll-snap-end {
    scroll-snap-align: end;
  }

  /* Scroll container with custom scrollbar */
  .scroll-container {
    scrollbar-width: thin;
    scrollbar-color: hsl(var(--muted-foreground)) hsl(var(--muted));
  }

  .scroll-container::-webkit-scrollbar {
    width: 6px;
  }

  .scroll-container::-webkit-scrollbar-track {
    background: hsl(var(--muted));
  }

  .scroll-container::-webkit-scrollbar-thumb {
    background: hsl(var(--muted-foreground));
    border-radius: 3px;
  }

  .scroll-container::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--foreground));
  }

  /* Hide scrollbar but keep functionality */
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }

/* Scroll fade effect */
.scroll-fade {
  mask-image: linear-gradient(
    to bottom,
    transparent 0%,
    black 20%,
    black 80%,
    transparent 100%
  );
}

/* Mobile-specific improvements */
@media (max-width: 640px) {
  /* Improve touch targets */
  button, 
  [role="button"], 
  input[type="submit"], 
  input[type="button"] {
    min-height: 44px;
    min-width: 44px;
  }
  
  /* Better text readability on mobile */
  body {
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
  }
  
  /* Improve form inputs on mobile */
  input, textarea, select {
    font-size: 16px; /* Prevents zoom on iOS */
  }
  
  /* Better spacing for mobile cards */
  .card {
    margin-bottom: 1rem;
  }
  
  /* Improve button spacing */
  .flex.gap-2 > * {
    margin-right: 0.5rem;
  }
  
  .flex.gap-2 > *:last-child {
    margin-right: 0;
  }
}

/* Tablet improvements */
@media (min-width: 641px) and (max-width: 1024px) {
  /* Better grid layouts for tablets */
  .grid-cols-1.md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

/* Touch device improvements */
@media (hover: none) and (pointer: coarse) {
  /* Remove hover effects on touch devices */
  .hover\:scale-105:hover {
    transform: none;
  }
  
  .hover\:shadow-lg:hover {
    box-shadow: none;
  }
  
  /* Better touch feedback */
  button:active,
  [role="button"]:active {
    transform: scale(0.98);
    transition: transform 0.1s ease;
  }
}
}